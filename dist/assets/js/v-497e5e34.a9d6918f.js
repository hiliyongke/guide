"use strict";(self.webpackChunkguide_front_web=self.webpackChunkguide_front_web||[]).push([[658],{3471:(a,s,n)=>{n.r(s),n.d(s,{data:()=>e});const e={key:"v-497e5e34",path:"/guide/image/import.html",title:"图片引入",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:3,title:"CSS Sprites VS Data URIs",slug:"css-sprites-vs-data-uris",children:[]},{level:2,title:"团队约定",slug:"团队约定",children:[{level:3,title:"CSS Sprites 使用建议",slug:"css-sprites-使用建议",children:[]},{level:3,title:"Data URIs（base64编码）使用建议",slug:"data-uris-base64编码-使用建议",children:[]}]}],filePathRelative:"guide/image/import.md",git:{updatedTime:1637124492e3,contributors:[{name:"Accompany831143",email:"Accompany_zhao@163.com",commits:1}]}}},8726:(a,s,n)=>{n.r(s),n.d(s,{default:()=>k});var e=n(6252);const t=(0,e.uE)('<h1 id="图片引入" tabindex="-1"><a class="header-anchor" href="#图片引入" aria-hidden="true">#</a> 图片引入</h1><p>测试内容图应该写上表明图片尺寸的占位图，可以用线上占位图生成服务，如：</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>https://placeholder.idcd.com/?w=300&amp;h=200\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="https://placeholder.idcd.com/?w=300&amp;h=200" alt="image"></p><p>HTML 中图片引入不需添加 width、height 属性，alt 属性应该写上</p><p><em>推荐：</em></p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><em>不推荐：</em></p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>CSS 中图片引入不需要引号</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.jdc</span> <span class="token punctuation">{</span>\n    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>icon.png<span class="token punctuation">)</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="css-sprites-vs-data-uris" tabindex="-1"><a class="header-anchor" href="#css-sprites-vs-data-uris" aria-hidden="true">#</a> CSS Sprites VS Data URIs</h3><h4 id="css-sprites特点" tabindex="-1"><a class="header-anchor" href="#css-sprites特点" aria-hidden="true">#</a> CSS Sprites特点</h4><ul><li>减少请求数</li><li>加速图片的显示</li><li>维护更新成本大</li><li>更多的内存消耗，特别是大体积或有过多空白的 Sprites 图</li><li>图片渗漏，相邻的不需展示的图片有可能出现在展示元素中，特别是在高清设备移动设备上</li></ul><h4 id="data-uris-base64编码" tabindex="-1"><a class="header-anchor" href="#data-uris-base64编码" aria-hidden="true">#</a> Data URIs（base64编码）</h4><ul><li>减少请求数</li><li>转换文件体积大，大约比原始的二进制大33%</li><li>IE6 / IE7 不支持</li><li>图片显示相对较慢，需要更多的CPU消耗</li></ul><p>更多关于 CSS Sprites 和 Data URIs 可以阅读：</p>',17),l={href:"http://davidbcalhoun.com/2011/when-to-base64-encode-images-and-when-not-to/",target:"_blank",rel:"noopener noreferrer"},i=(0,e.Uk)("《When to Base64 Encode Images (and When Not To)》"),p={href:"http://madscript.com/html5/datauri-best-practice/",target:"_blank",rel:"noopener noreferrer"},r=(0,e.Uk)("《Data URI 最佳实践》"),c={href:"http://www.99css.com/492/",target:"_blank",rel:"noopener noreferrer"},o=(0,e.Uk)("《Data URI&MHTML: 用还是不用？》"),u={href:"http://www.mobify.com/blog/css-sprites-vs-data-uris-which-is-faster-on-mobile/",target:"_blank",rel:"noopener noreferrer"},d=(0,e.Uk)("CSS Sprites vs. Data URIs: Which is Faster on Mobile?"),h=(0,e.uE)('<h2 id="团队约定" tabindex="-1"><a class="header-anchor" href="#团队约定" aria-hidden="true">#</a> 团队约定</h2><h3 id="css-sprites-使用建议" tabindex="-1"><a class="header-anchor" href="#css-sprites-使用建议" aria-hidden="true">#</a> CSS Sprites 使用建议</h3><ul><li>适合使用频率高更新频率低的小图标</li><li>尽量不留太多的空白</li><li>体积较大的图片不合并</li><li>确保要合并的小图坐标数值和合并后的 Sprites 图尺寸均为偶数</li></ul><h3 id="data-uris-base64编码-使用建议" tabindex="-1"><a class="header-anchor" href="#data-uris-base64编码-使用建议" aria-hidden="true">#</a> Data URIs（base64编码）使用建议</h3><ul><li>适合更新频率高的小图片，如某些具备自定义功能的标题icon等</li><li>转换成 Base64 编码的图片应小于 2KB</li><li>移动端不使用 Base64 编码</li><li>要兼容 IE6/IE7 的不使用</li></ul>',5),m={},k=(0,n(3744).Z)(m,[["render",function(a,s){const n=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,(0,e._)("p",null,[(0,e._)("a",l,[i,(0,e.Wm)(n)])]),(0,e._)("p",null,[(0,e._)("a",p,[r,(0,e.Wm)(n)])]),(0,e._)("p",null,[(0,e._)("a",c,[o,(0,e.Wm)(n)])]),(0,e._)("p",null,[(0,e._)("a",u,[d,(0,e.Wm)(n)])]),h],64)}]])},3744:(a,s)=>{s.Z=(a,s)=>{const n=a.__vccOpts||a;for(const[a,e]of s)n[a]=e;return n}}}]);